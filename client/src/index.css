@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(148, 210, 189, 0.18);
  --elevate-2: rgba(238, 155, 0, 0.22);

  --background: 176 36% 92%;

  --foreground: 200 60% 8%;

  --border: 177 30% 84%;

  --card: 180 38% 96%;

  --card-foreground: 200 60% 8%;

  --card-border: 176 24% 88%;

  --sidebar: 176 30% 94%;

  --sidebar-foreground: 200 60% 10%;

  --sidebar-border: 176 24% 86%;

  --sidebar-primary: 188 74% 32%;

  --sidebar-primary-foreground: 176 36% 96%;

  --sidebar-accent: 36 93% 64%;

  --sidebar-accent-foreground: 200 60% 10%;

  --sidebar-ring: 188 74% 32%;

  --popover: 176 34% 97%;

  --popover-foreground: 200 60% 8%;

  --popover-border: 176 30% 84%;

  --primary: 188 74% 32%;

  --primary-foreground: 176 36% 96%;

  --secondary: 36 93% 64%;

  --secondary-foreground: 200 60% 12%;

  --muted: 177 30% 90%;

  --muted-foreground: 200 40% 28%;

  --accent: 36 93% 74%;

  --accent-foreground: 200 60% 10%;

  --destructive: 8 74% 55%;

  --destructive-foreground: 24 100% 97%;

  --input: 176 26% 78%;
  --ring: 188 74% 32%;
  --chart-1: 188 74% 32%;
  --chart-2: 36 93% 64%;
  --chart-3: 176 30% 80%;
  --chart-4: 24 100% 58%;
  --chart-5: 353 61% 58%;

  --font-sans: Inter, -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: 'JetBrains Mono', 'Fira Code', Menlo, monospace;
  --radius: .5rem;
  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.08);
  --shadow-sm: 0px 2px 4px -1px hsl(0 0% 0% / 0.06), 0px 1px 2px -1px hsl(0 0% 0% / 0.06);
  --shadow: 0px 4px 6px -1px hsl(0 0% 0% / 0.08), 0px 2px 4px -1px hsl(0 0% 0% / 0.06);
  --shadow-md: 0px 6px 12px -2px hsl(0 0% 0% / 0.10), 0px 3px 6px -2px hsl(0 0% 0% / 0.08);
  --shadow-lg: 0px 10px 20px -4px hsl(0 0% 0% / 0.12), 0px 4px 8px -2px hsl(0 0% 0% / 0.08);
  --shadow-xl: 0px 20px 30px -8px hsl(0 0% 0% / 0.15), 0px 8px 12px -4px hsl(0 0% 0% / 0.10);
  --shadow-2xl: 0px 25px 40px -12px hsl(0 0% 0% / 0.18);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 12;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(148, 210, 189, 0.12);
  --elevate-2: rgba(238, 155, 0, 0.18);

  --background: 197 100% 7%;

  --foreground: 153 40% 88%;

  --border: 190 40% 22%;

  --card: 190 64% 18%;

  --card-foreground: 153 40% 88%;

  --card-border: 190 42% 24%;

  --sidebar: 197 60% 10%;

  --sidebar-foreground: 153 40% 88%;

  --sidebar-border: 190 42% 24%;

  --sidebar-primary: 36 100% 47%;

  --sidebar-primary-foreground: 0 0% 8%;

  --sidebar-accent: 181 60% 32%;

  --sidebar-accent-foreground: 153 45% 88%;

  --sidebar-ring: 36 100% 47%;

  --popover: 197 55% 12%;

  --popover-foreground: 153 40% 88%;

  --popover-border: 190 40% 22%;

  --primary: 36 100% 47%;

  --primary-foreground: 0 0% 8%;

  --secondary: 181 45% 28%;

  --secondary-foreground: 153 40% 85%;

  --muted: 197 38% 18%;

  --muted-foreground: 153 32% 72%;

  --accent: 153 45% 70%;

  --accent-foreground: 197 100% 7%;

  --destructive: 357 64% 37%;

  --destructive-foreground: 0 0% 95%;

  --input: 190 40% 24%;
  --ring: 36 100% 47%;
  --chart-1: 36 100% 47%;
  --chart-2: 181 60% 32%;
  --chart-3: 153 45% 70%;
  --chart-4: 24 97% 41%;
  --chart-5: 12 80% 37%;

  --shadow-2xs: 0px 1px 2px 0px rgba(0, 18, 25, 0.45);
  --shadow-xs: 0px 1px 3px 0px rgba(0, 18, 25, 0.5);
  --shadow-sm: 0px 2px 4px -1px rgba(0, 18, 25, 0.45), 0px 1px 2px -1px rgba(0, 18, 25, 0.35);
  --shadow: 0px 4px 6px -1px rgba(0, 18, 25, 0.5), 0px 2px 4px -1px rgba(0, 18, 25, 0.4);
  --shadow-md: 0px 6px 12px -2px rgba(0, 18, 25, 0.55), 0px 3px 6px -2px rgba(0, 18, 25, 0.45);
  --shadow-lg: 0px 10px 20px -4px rgba(0, 18, 25, 0.6), 0px 4px 8px -2px rgba(0, 18, 25, 0.5);
  --shadow-xl: 0px 20px 30px -8px rgba(0, 18, 25, 0.65), 0px 8px 12px -4px rgba(0, 18, 25, 0.55);
  --shadow-2xl: 0px 25px 40px -12px rgba(0, 18, 25, 0.7);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased text-foreground;
    background-color: hsl(var(--background));
    background-image:
      radial-gradient(140% 80% at 0% 0%, rgba(10, 147, 150, 0.25), transparent 60%),
      radial-gradient(120% 90% at 100% 100%, rgba(238, 155, 0, 0.22), transparent 65%);
    background-attachment: fixed;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Monaco Editor cursor positioning fixes */
  .monaco-editor .cursor {
    position: relative !important;
  }
  
  .monaco-editor .view-lines {
    font-feature-settings: "liga" 1, "calt" 1;
  }
  
  .monaco-editor .view-line {
    font-feature-settings: "liga" 1, "calt" 1;
  }

  /* Theme transition animation - smooth fade */
  .theme-transitioning * {
    transition: background-color 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                border-color 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                color 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
  }

  /* Refined scrollbars */
  * {
    scrollbar-width: thin;
    scrollbar-color: hsl(var(--primary)) transparent;
  }

  *::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }

  *::-webkit-scrollbar-track {
    background: rgba(148, 163, 184, 0.12);
    border-radius: 9999px;
  }

  *::-webkit-scrollbar-thumb {
    border-radius: 9999px;
    border: 3px solid transparent;
    background-clip: padding-box;
    background-image: linear-gradient(
      180deg,
      hsl(var(--primary)) 0%,
      hsl(var(--secondary)) 100%
    );
    box-shadow: inset 0 0 0 1px hsl(var(--primary) / 0.35);
  }

  *::-webkit-scrollbar-thumb:hover {
    background-image: linear-gradient(
      180deg,
      hsl(var(--primary)) 0%,
      hsl(var(--secondary)) 85%
    );
    box-shadow: inset 0 0 0 1px hsl(var(--primary) / 0.55);
  }

  .dark *::-webkit-scrollbar-track {
    background: rgba(15, 23, 42, 0.45);
  }

  .dark *::-webkit-scrollbar-thumb {
    box-shadow: inset 0 0 0 1px hsl(var(--primary) / 0.25);
  }
}

.interactive-hero-card {
  position: relative;
  transition: transform 0.4s ease, box-shadow 0.4s ease;
  --hero-glow-primary: rgba(148, 210, 189, 0.35);
  --hero-glow-secondary: rgba(10, 147, 150, 0.28);
  --hero-hover-shadow: 0 80px 140px rgba(148, 210, 189, 0.32);
}

.interactive-hero-card:hover {
  transform: translateY(-6px);
  box-shadow: var(--hero-hover-shadow, 0 80px 140px rgba(148, 210, 189, 0.32));
}

.interactive-hero-card::before,
.interactive-hero-card::after {
  content: "";
  position: absolute;
  inset: -2px;
  border-radius: inherit;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.35s ease;
}

.interactive-hero-card::before {
  background: radial-gradient(
    260px circle at var(--glow-x, 50%) var(--glow-y, 50%),
    var(--hero-glow-primary, rgba(148, 210, 189, 0.35)),
    transparent 70%
  );
}

.interactive-hero-card::after {
  background: radial-gradient(
    320px circle at var(--glow-x, 50%) var(--glow-y, 50%),
    var(--hero-glow-secondary, rgba(10, 147, 150, 0.28)),
    transparent 75%
  );
}

.interactive-hero-card:hover::before,
.interactive-hero-card:hover::after {
  opacity: 1;
}

@media (prefers-reduced-motion: reduce) {
  .interactive-hero-card {
    transition: none;
  }

  .interactive-hero-card:hover {
    transform: none;
    box-shadow: var(--hero-hover-shadow, 0 60px 120px rgba(148, 210, 189, 0.24));
  }

  .interactive-hero-card::before,
  .interactive-hero-card::after {
    transition: none;
  }
}
